// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(uuid())
  name         String
  email        String    @unique
  password     String?
  role         Role
  simulatedDid String?   @unique
  qrCodeUrl    String?
  createdAt    DateTime  @default(now())
  events       Event[]   @relation("CreatedEvents")
  aidLogs      AidLog[]  @relation("BeneficiaryLogs")
  volunteerLogs AidLog[] @relation("VolunteerLogs")
  assignedEvents Event[] @relation("EventVolunteers")
}

enum Role {
  beneficiary
  donor
  volunteer
  ngo
  auditor
}

model Event {
  id          String    @id @default(uuid())
  name        String
  type        String
  location    String
  description String?
  quantity    Int?
  supplies    String[]
  createdBy   String
  startTime   DateTime
  endTime     DateTime
  createdAt   DateTime  @default(now())
  creator     User      @relation("CreatedEvents", fields: [createdBy], references: [id])
  aidLogs     AidLog[]
  volunteers  User[]    @relation("EventVolunteers")
}

model AidLog {
  id             String   @id @default(uuid())
  eventId        String
  beneficiaryId  String
  volunteerId    String
  timestamp      DateTime @default(now())
  transactionId  String   @unique
  status         String
  event          Event    @relation(fields: [eventId], references: [id])
  beneficiary    User     @relation("BeneficiaryLogs", fields: [beneficiaryId], references: [id])
  volunteer      User     @relation("VolunteerLogs", fields: [volunteerId], references: [id])
}
